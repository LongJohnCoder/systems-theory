 . = orig+60
       ttyi;240 / interrupt vector tty in       ; processor level 5
       ttyo;240 / interrupt vector tty out
       ppti;240 /                  punch papertape in
       ppto;240 /                  punch papertape out
       clock;340 / clock interrupt vector       ; processor level 7
 . = orig+200
/     lpto; 240  line printer interrupt     ; processor level 5 (future)
 . = orig+204
       drum;300 / drum interrupt         ; processor level 6
 . = orig+214
       tape;300 / dec tape interrupt
       disk;300 / rk03 interrupt
 . = orig+300
       0*4+trcv; 240; 0*4+txmt; 240 / dc11 input,output interrupt vectors
       1*4+trcv; 240; 1*4+txmt; 240
       2*4+trcv; 240; 2*4+txmt; 240
       3*4+trcv; 240; 3*4+txmt; 240
       4*4+trcv; 240; 4*4+txmt; 240
       5*4+trcv; 240; 5*4+txmt; 240
       6*4+trcv; 240; 6*4+txmt; 240
       7*4+trcv; 240; 7*4+txmt; 240

 . = orig+400
/ copy in transfer vectors

	mov    $ecore,sp / put pointer to ecore in the stack pointer
	jsr    r0,copyz; 0; 14 / clear locations 0 to 14 in core
	mov    $4,r0
	clr    r1
	mov    r0,(r1)+ / put value of 4 into location 0
	mov    r0,(r1)+ / put value of 4 into location 2
	mov    $unkni,(r1)+ / put value of unkni into location 4;
                            / time out, bus error
	clr    (r1)+ / put value of 0 into location 6
	mov    $fpsym,(r1)+ / put value of fpsym into location 10
	clr    (r1)+ / put value of 0 into location 12
/ clear core
	.if cold / ignored if cold = 0
	halt / halt before initializing rf file system; user has
             / last chance to reconsider
	.endif

	jsr    r0,copyz; systm; ecore / clear locations systm to ecore
	mov    $s.chrgt+2,clockp / intialize clockp
/ allocate tty buffers; see H.0 for description
	mov    $buffer,r0
	mov    $tty+6,r1
1:
	mov    r0,(r1)
	add    $140.,r0 / tty buffers are 140. bytes long
	add    $8,r1
	cmp    r1,$tty+[ntty*8] / has a buffer been assigned for each tty
	blo    1b

/ allocate disk buffers; see H.0 for description

