#ifndef _VOLMGR_
#define _VOLMGR_

//
// Volume managers should report this GUID in IoRegisterDeviceInterface.
//
DEFINE_GUID(VOLMGR_VOLUME_MANAGER_GUID,
            0x53f5630e,
            0xb6bf,
            0x11d0,
            0x94,
            0xf2,
            0x00,
            0xa0,
            0xc9,
            0x1e,
            0xfb,
            0x8b);

//
// Internal I/O Control Codes for communication with the Volume Manager
//
#define IOCTL_VOLMGR_BASE          ((ULONG) 'v')

#define IOCTL_INTERNAL_VOLMGR_PARTITION_ARRIVED \
    CTL_CODE(IOCTL_VOLMGR_BASE, 0, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_INTERNAL_VOLMGR_PARTITION_REMOVED \
    CTL_CODE(IOCTL_VOLMGR_BASE, 1, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_INTERNAL_VOLMGR_WHOLE_DISK_REMOVED \
    CTL_CODE(IOCTL_VOLMGR_BASE, 2, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_INTERNAL_VOLMGR_REFERENCE_DEPENDANT_VOLUMES \
    CTL_CODE(IOCTL_VOLMGR_BASE, 3, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_INTERNAL_VOLMGR_LEGACY_PARTITION_ARRIVED \
    CTL_CODE(IOCTL_VOLMGR_BASE, 4, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_INTERNAL_VOLMGR_LEGACY_PARTITION_REMOVED \
    CTL_CODE(IOCTL_VOLMGR_BASE, 5, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_INTERNAL_VOLMGR_QUERY_CHANGE_PARTITION \
    CTL_CODE(IOCTL_VOLMGR_BASE, 6, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_INTERNAL_VOLMGR_CANCEL_CHANGE_PARTITION \
    CTL_CODE(IOCTL_VOLMGR_BASE, 7, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_INTERNAL_VOLMGR_PARTITION_CHANGED \
    CTL_CODE(IOCTL_VOLMGR_BASE, 8, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_INTERNAL_VOLMGR_SETUP_WMI_COUNTER \
    CTL_CODE(IOCTL_VOLMGR_BASE, 9, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_INTERNAL_VOLMGR_POWER_NOTIFY \
    CTL_CODE(IOCTL_VOLMGR_BASE, 10, METHOD_BUFFERED, FILE_ANY_ACCESS)

//
// WMI Counter Function Types
//
typedef
NTSTATUS
(*PPM_WMI_COUNTER_ENABLE)(
    IN OUT PVOID *CounterContext
);

typedef
BOOLEAN
(*PPM_WMI_COUNTER_DISABLE)(
    IN PVOID *CounterContext,
    IN BOOLEAN ForceDisable,
    IN BOOLEAN DeallocateOnZero
);

typedef
VOID
(*PPM_WMI_COUNTER_IO_START)(
    IN PVOID CounterContext,
    OUT PLARGE_INTEGER TimeStamp
);

typedef
VOID
(*PPM_WMI_COUNTER_IO_COMPLETE)(
    IN PVOID CounterContext,
    IN PIRP Irp,
    IN PLARGE_INTEGER TimeStamp
);

typedef
VOID
(*PPM_WMI_COUNTER_QUERY)(
    IN PVOID CounterContext,
    IN OUT struct _DISK_PERFORMANCE *CounterBuffer,
    IN PWCHAR StorageManagerName,
    IN ULONG StorageDeviceNumber
);

//
// Input structure for IOCTL_INTERNAL_VOLMGR_PARTITION_ARRIVED,
// IOCTL_INTERNAL_VOLMGR_PARTITION_REMOVED,
// IOCTL_INTERNAL_VOLMGR_REFERENCE_DEPENDANT_VOLUMES,
// IOCTL_INTERNAL_VOLMGR_QUERY_CHANGE_PARTITION,
// IOCTL_INTERNAL_VOLMGR_CANCEL_CHANGE_PARTITION, and
// IOCTL_INTERNAL_VOLMGR_PARTITION_CHANGED.
//
typedef struct _VOLMGR_PARTITION_INFORMATION
{
    PDEVICE_OBJECT PartitionDeviceObject;
    PDEVICE_OBJECT WholeDiskPdo;
} VOLMGR_PARTITION_INFORMATION, *PVOLMGR_PARTITION_INFORMATION;

//
// Input structure for IOCTL_INTERNAL_VOLMGR_POWER_NOTIFY
//
typedef struct _VOLMGR_POWER_INFORMATION
{
    PDEVICE_OBJECT PartitionDeviceObject;
    PDEVICE_OBJECT WholeDiskPdo;
    SYSTEM_POWER_STATE PowerState;
} VOLMGR_POWER_INFORMATION, *PVOLMGR_POWER_INFORMATION;

//
// Input structure for IOCTL_INTERNAL_VOLMGR_WHOLE_DISK_REMOVED.
//
typedef struct _VOLMGR_WHOLE_DISK_INFORMATION
{
    PDEVICE_OBJECT WholeDiskPdo;
} VOLMGR_WHOLE_DISK_INFORMATION, *PVOLMGR_WHOLE_DISK_INFORMATION;

//
// Output structure for IOCTL_INTERNAL_VOLMGR_REFERENCE_DEPENDANT_VOLUMES.
//
typedef struct _VOLMGR_DEPENDANT_VOLUMES_INFORMATION
{
    PDEVICE_RELATIONS DependantVolumeReferences;
} VOLMGR_DEPENDANT_VOLUMES_INFORMATION, *PVOLMGR_DEPENDANT_VOLUMES_INFORMATION;

//
// Input structure for IOCTL_INTERNAL_VOLMGR_LEGACY_PARTITION_ARRIVED and
// IOCTL_INTERNAL_VOLMGR_LEGACY_PARTITION_REMOVED.
//
typedef struct _VOLMGR_LEGACY_PARTITION_INFORMATION
{
    PDEVICE_OBJECT LegacyWholeDiskDeviceObject;
    ULONG DiskNumber;
    ULONG PartitionNumber;
} VOLMGR_LEGACY_PARTITION_INFORMATION, *PVOLMGR_LEGACY_PARTITION_INFORMATION;

//
// Input structure for IOCTL_INTERNAL_VOLMGR_SETUP_WMI_COUNTER
//
typedef struct _PM_WMI_COUNTER_CONTEXT
{
    PPM_WMI_COUNTER_ENABLE PmWmiCounterEnable;
    PPM_WMI_COUNTER_DISABLE PmWmiCounterDisable;
    PPM_WMI_COUNTER_IO_START PmWmiCounterIoStart;
    PPM_WMI_COUNTER_IO_COMPLETE PmWmiCounterIoComplete;
    PPM_WMI_COUNTER_QUERY PmWmiCounterQuery;
} PM_WMI_COUNTER_CONTEXT, *PPM_WMI_COUNTER_CONTEXT;

#endif
